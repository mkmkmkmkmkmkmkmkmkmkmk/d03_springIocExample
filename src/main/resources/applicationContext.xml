<!--<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">-->
<!--6.开启注解扫描-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.2.xsd">
    <!--
        对应的java代码：UserDao userDao = new UserDaoImpl1();
    -->
    <!--2.创建数据源：使用springIoc解耦-->
    <!--<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/ee1?useSSL=false&amp;serverTimezone=UTC&amp;characterEncoding=UTF-8&amp;useUnicode=yes" />
        <property name="username" value="root" />
       <property name="password" value="123456"/>
    </bean>
    <bean id="qr" class="org.apache.commons.dbutils.QueryRunner">
        <constructor-arg name="ds" ref="dataSource"/>
    </bean>
    &lt;!&ndash;注入qr在EmployeeDaoImpl中&ndash;&gt;
    <bean id="empDao" class="weiyu.dao.impl.EmployeeDaoImpl">
        <property name="qr" ref="qr"/>
    </bean>
    <bean id="empService" class="weiyu.service.impl.EmployeeServiceImpl">
        <property name="weiyu.dao" ref="empDao"/>
    </bean>-->

    <!-- 3. 4.在spring framework中提供了一个叫做PlacePropertyHolder，加载属性配置文件到spring容器中-->
   <!-- <bean class="org.springframework.beans.factory.weiyu.config.PropertyPlaceholderConfigurer">
     <property name="location" value="classpath:jdbc.properties" />
    </bean>
    &lt;!&ndash;<context:property-placeholder location="classpath:jdbc.properties" />&ndash;&gt;

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <bean id="qr" class="org.apache.commons.dbutils.QueryRunner">
        <constructor-arg name="ds" ref="dataSource"/>
    </bean>
    &lt;!&ndash;注入qr在EmployeeDaoImpl中&ndash;&gt;
    <bean id="empDao" class="weiyu.dao.impl.EmployeeDaoImpl">
        <property name="qr" ref="qr"/>
    </bean>
    <bean id="empService" class="weiyu.service.impl.EmployeeServiceImpl">
        <property name="weiyu.dao" ref="empDao"/>
    </bean>-->

    <!--5.重写PropertyPlaceholderConfigurer中方法：使用Base64编码解码properties配置文件的username,password-->
   <!--    <bean class="weiyu.config.MyPropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
        &lt;!&ndash;5.1.set注入&ndash;&gt;
       &lt;!&ndash; <property name="needPropertyNames">
            <array>
                <value>jdbc.user</value>
                <value>jdbc.pass</value>
            </array>
        </property>&ndash;&gt;
        &lt;!&ndash;5.2.constructor注入&ndash;&gt;
        <constructor-arg name="needPropertyNames">
            <array>
                <value>jdbc.user</value>
                <value>jdbc.pass</value>
            </array>
        </constructor-arg>
    </bean>

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="username" value="${jdbc.user}" />
        <property name="password" value="${jdbc.pass}"/>
    </bean>

    <bean id="qr" class="org.apache.commons.dbutils.QueryRunner">
        <constructor-arg name="ds" ref="dataSource"/>
    </bean>
    &lt;!&ndash;注入qr在EmployeeDaoImpl中&ndash;&gt;
    <bean id="empDao" class="weiyu.dao.impl.EmployeeDaoImpl">
        <property name="qr" ref="qr"/>
    </bean>
    <bean id="empService" class="weiyu.service.impl.EmployeeServiceImpl">
        <property name="weiyu.dao" ref="empDao"/>
    </bean>-->
    <!--6. 7. 8. 9,10.开启注解扫描-->
    <context:component-scan base-package="weiyu"/>

    <!--10.使用注解改造为IOC注释模式-->
    <!--<bean class="weiyu.config.MyPropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
        &lt;!&ndash;10.1.constructor注入&ndash;&gt;
        <constructor-arg name="needPropertyNames">
            <array>
                <value>jdbc.user</value>
                <value>jdbc.pass</value>
            </array>
        </constructor-arg>
    </bean>
    &lt;!&ndash;这两个不能动，因为他们不是自己写的，且dataSource已经在spring容器中了&ndash;&gt;
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="username" value="${jdbc.user}" />
        <property name="password" value="${jdbc.pass}"/>
    </bean>
    <bean id="qr" class="org.apache.commons.dbutils.QueryRunner">
        <constructor-arg name="ds" ref="dataSource"/>
    </bean>
    <bean id="empDao" class="weiyu.dao.impl.EmloyeeDaoImpl3">
        <property name="qr" ref="qr"/>
    </bean>
    <bean id="empService" class="weiyu.service.impl.EmployeeServiceImpl3">
        <property name="employeeDao" ref="empDao"/>
    </bean>-->
    <!--11.配置类配置spring的数据源.完全不需要配置文件xml-->
</beans>