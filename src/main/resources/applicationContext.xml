<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--
        对应的java代码：UserDao userDao = new UserDaoImpl1();
    -->
    <!--2.创建数据源：使用springIoc解耦-->
    <!--<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/ee1?useSSL=false&amp;serverTimezone=UTC&amp;characterEncoding=UTF-8&amp;useUnicode=yes" />
        <property name="username" value="root" />
       <property name="password" value="123456"/>
    </bean>
    <bean id="qr" class="org.apache.commons.dbutils.QueryRunner">
        <constructor-arg name="ds" ref="dataSource"/>
    </bean>
    &lt;!&ndash;注入qr在EmployeeDaoImpl中&ndash;&gt;
    <bean id="empDao" class="dao.impl.EmployeeDaoImpl">
        <property name="qr" ref="qr"/>
    </bean>
    <bean id="empService" class="service.impl.EmployeeServiceImpl">
        <property name="dao" ref="empDao"/>
    </bean>-->

    <!-- 3. 4.在spring framework中提供了一个叫做PlacePropertyHolder，加载属性配置文件到spring容器中-->
   <!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
     <property name="location" value="classpath:jdbc.properties" />
    </bean>
    &lt;!&ndash;<context:property-placeholder location="classpath:jdbc.properties" />&ndash;&gt;

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <bean id="qr" class="org.apache.commons.dbutils.QueryRunner">
        <constructor-arg name="ds" ref="dataSource"/>
    </bean>
    &lt;!&ndash;注入qr在EmployeeDaoImpl中&ndash;&gt;
    <bean id="empDao" class="dao.impl.EmployeeDaoImpl">
        <property name="qr" ref="qr"/>
    </bean>
    <bean id="empService" class="service.impl.EmployeeServiceImpl">
        <property name="dao" ref="empDao"/>
    </bean>-->

    <!--5.重写PropertyPlaceholderConfigurer中方法：使用Base64编码解码properties配置文件的username,password-->
    <bean class="config.MyPropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
        <!--5.1.set注入-->
       <!-- <property name="needPropertyNames">
            <array>
                <value>jdbc.user</value>
                <value>jdbc.pass</value>
            </array>
        </property>-->
        <!--5.2.constructor注入-->
        <constructor-arg name="needPropertyNames">
            <array>
                <value>jdbc.user</value>
                <value>jdbc.pass</value>
            </array>
        </constructor-arg>
    </bean>

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="username" value="${jdbc.user}" />
        <property name="password" value="${jdbc.pass}"/>
    </bean>

    <bean id="qr" class="org.apache.commons.dbutils.QueryRunner">
        <constructor-arg name="ds" ref="dataSource"/>
    </bean>
    <!--注入qr在EmployeeDaoImpl中-->
    <bean id="empDao" class="dao.impl.EmployeeDaoImpl">
        <property name="qr" ref="qr"/>
    </bean>
    <bean id="empService" class="service.impl.EmployeeServiceImpl">
        <property name="dao" ref="empDao"/>
    </bean>
</beans>